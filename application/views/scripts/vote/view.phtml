<?php

// Load CSS
$this->headLink()->appendStylesheet('/css/vote.css');

// Load our colourful array of JS libraries
// NOTE: these are loaded at the end of the body so that the page doesn't hang blank
$this->inlineScript()->appendFile("/js/MochiKit/MochiKit.js");
$this->inlineScript()->appendFile("/js/jquery-1.4.2.min.js");
$this->inlineScript()->appendFile("/js/jquery.json-2.2.min.js");
$this->inlineScript()->appendFile("/js/jquery.base64.js");
$this->inlineScript()->appendFile("/js/jquery.progressbar.min.js");
$this->inlineScript()->captureStart();
?>
jQuery._$ = MochiKit.DOM.getElement;
var $j = jQuery.noConflict(); 
<?php
$this->inlineScript()->captureEnd();
$this->inlineScript()->appendFile("/js/Clipperz/YUI/Utils.js");
$this->inlineScript()->appendFile("/js/Clipperz/YUI/DomHelper.js");
$this->inlineScript()->appendFile("/js/Clipperz/Base.js");
$this->inlineScript()->appendFile("/js/Clipperz/Logging.js");
$this->inlineScript()->appendFile("/js/Clipperz/ByteArray.js");
$this->inlineScript()->appendFile("/js/Clipperz/Async.js");
$this->inlineScript()->appendFile("/js/Clipperz/Crypto/BigInt.js");
$this->inlineScript()->appendFile("/js/Clipperz/Crypto/Base.js");
$this->inlineScript()->appendFile("/js/Clipperz/Crypto/AES.js");
$this->inlineScript()->appendFile("/js/Clipperz/Crypto/SHA.js");
$this->inlineScript()->appendFile("/js/Clipperz/Crypto/PRNG.js");
$this->inlineScript()->appendFile("/js/Clipperz/Crypto/ECC/PrimeField/FiniteField.js");
$this->inlineScript()->appendFile("/js/Clipperz/Crypto/ECC/PrimeField/Curve.js");
$this->inlineScript()->appendFile("/js/Clipperz/Crypto/ECC/PrimeField/Point.js");
$this->inlineScript()->appendFile("/js/Clipperz/Crypto/ECC/StandardCurves.js");
$this->inlineScript()->appendFile("/js/Clipperz/Crypto/ecdsa.js");
$this->inlineScript()->appendFile("/js/Clipperz/Crypto/ECBlind.js");

// Load our JS code - this will reveal the form once we're done init
$this->inlineScript()->appendFile("/js/ppau.js"); // code to run voting UI
$this->inlineScript()->appendFile("/js/cryptovote.js"); // code to submit vote
$this->inlineScript()->appendFile("/js/hardvalidate.js");

// Give JS an array of all question IDs
$this->inlineScript()->captureStart();
?>
var questions = [ <?php echo implode(',',$this->questionIds) ?> ];
var pollid = <?php echo intval($this->pollid) ?>;
<?php
$this->inlineScript()->captureEnd();


// BEGIN MAIN PAGE
?>

<div class="contentPane" id="loading">
<p><img src="/image/loading.gif" alt="Loading..." /></p>
<p><span id="progressBar"></span></p>
<p>Loading...</p>
<p id="loadingText"></p>
</div>


<div style="display:none" class="contentPane" id="content">
<form id="vote" onsubmit="return false">
<?php /*
<?php foreach($this->questions as $question): ?>
	<h3><?php echo $question->question ?></h3>
	<?php if(!empty($question->info)): ?>
		<p><?php echo $question->info ?></p>
	<?php endif ?>
	<?php echo $this->partial('vote/form-'.$question->type.'.phtml',array('question' => $question)) ?>
<?php endforeach ?>
*/ ?>
<?php echo $this->partial('vote/poll-'.$this->pollid.'.phtml') ?>
<p>Warning: Once this form has been submitted your key will expire and you will not be able to make changes to your selections.</p>
<input id="submit" type="submit" value="Submit" />
<p class="needMoreEntropy error" style="display:none">Hold on a moment, we're still generating entropy for the pseudo-random number generator. Moving your mouse around this window will help generate better entropy.</p>
</form>
</div>

<div style="display:none" class="contentPane" id="error">

</div>

<div style="display:none;text-align:center" class="contentPane" id="results">
<p><b>Your vote has been cast successfully!</b></p>
<p>Thank you for participating in the voting for Pirate Congress 2011. The results will be posted to the website and included in minutes which will be made available to all members.</p>
</div>

